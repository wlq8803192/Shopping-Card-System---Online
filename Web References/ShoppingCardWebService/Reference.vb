'------------------------------------------------------------------------------
' <auto-generated>
'     此代码由工具生成。
'     运行库版本:2.0.50727.3655
'
'     对此文件的更改可能会导致不正确的行为，并且如果
'     重新生成代码，这些更改将会丢失。
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Data
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'此源代码是由 Microsoft.VSDesigner 2.0.50727.3655 版自动生成。
'
Namespace ShoppingCardWebService
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="ReportWebServiceSoap", [Namespace]:="http://ShoppingCardWebService/")>  _
    Partial Public Class ReportWebService
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private GetDataTableOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ModifyTableOperationCompleted As System.Threading.SendOrPostCallback
        
        Private BulkCopyTableOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = frmMain.sShoppingCardWebService
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event GetDataTableCompleted As GetDataTableCompletedEventHandler
        
        '''<remarks/>
        Public Event ModifyTableCompleted As ModifyTableCompletedEventHandler
        
        '''<remarks/>
        Public Event BulkCopyTableCompleted As BulkCopyTableCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ShoppingCardWebService/GetDataTable", RequestNamespace:="http://ShoppingCardWebService/", ResponseNamespace:="http://ShoppingCardWebService/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetDataTable(ByVal sSQLString As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetDataTable", New Object() {sSQLString})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetDataTableAsync(ByVal sSQLString As String)
            Me.GetDataTableAsync(sSQLString, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetDataTableAsync(ByVal sSQLString As String, ByVal userState As Object)
            If (Me.GetDataTableOperationCompleted Is Nothing) Then
                Me.GetDataTableOperationCompleted = AddressOf Me.OnGetDataTableOperationCompleted
            End If
            Me.InvokeAsync("GetDataTable", New Object() {sSQLString}, Me.GetDataTableOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetDataTableOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetDataTableCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetDataTableCompleted(Me, New GetDataTableCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ShoppingCardWebService/ModifyTable", RequestNamespace:="http://ShoppingCardWebService/", ResponseNamespace:="http://ShoppingCardWebService/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ModifyTable(ByVal sSQLString As String) As Integer
            Dim results() As Object = Me.Invoke("ModifyTable", New Object() {sSQLString})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ModifyTableAsync(ByVal sSQLString As String)
            Me.ModifyTableAsync(sSQLString, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModifyTableAsync(ByVal sSQLString As String, ByVal userState As Object)
            If (Me.ModifyTableOperationCompleted Is Nothing) Then
                Me.ModifyTableOperationCompleted = AddressOf Me.OnModifyTableOperationCompleted
            End If
            Me.InvokeAsync("ModifyTable", New Object() {sSQLString}, Me.ModifyTableOperationCompleted, userState)
        End Sub
        
        Private Sub OnModifyTableOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModifyTableCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModifyTableCompleted(Me, New ModifyTableCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ShoppingCardWebService/BulkCopyTable", RequestNamespace:="http://ShoppingCardWebService/", ResponseNamespace:="http://ShoppingCardWebService/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function BulkCopyTable(ByVal sTargetTable As String, ByVal dtSourceTable As System.Data.DataTable) As Short
            Dim results() As Object = Me.Invoke("BulkCopyTable", New Object() {sTargetTable, dtSourceTable})
            Return CType(results(0),Short)
        End Function
        
        '''<remarks/>
        Public Overloads Sub BulkCopyTableAsync(ByVal sTargetTable As String, ByVal dtSourceTable As System.Data.DataTable)
            Me.BulkCopyTableAsync(sTargetTable, dtSourceTable, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub BulkCopyTableAsync(ByVal sTargetTable As String, ByVal dtSourceTable As System.Data.DataTable, ByVal userState As Object)
            If (Me.BulkCopyTableOperationCompleted Is Nothing) Then
                Me.BulkCopyTableOperationCompleted = AddressOf Me.OnBulkCopyTableOperationCompleted
            End If
            Me.InvokeAsync("BulkCopyTable", New Object() {sTargetTable, dtSourceTable}, Me.BulkCopyTableOperationCompleted, userState)
        End Sub
        
        Private Sub OnBulkCopyTableOperationCompleted(ByVal arg As Object)
            If (Not (Me.BulkCopyTableCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent BulkCopyTableCompleted(Me, New BulkCopyTableCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub GetDataTableCompletedEventHandler(ByVal sender As Object, ByVal e As GetDataTableCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetDataTableCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub ModifyTableCompletedEventHandler(ByVal sender As Object, ByVal e As ModifyTableCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ModifyTableCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub BulkCopyTableCompletedEventHandler(ByVal sender As Object, ByVal e As BulkCopyTableCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class BulkCopyTableCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Short
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Short)
            End Get
        End Property
    End Class
End Namespace
